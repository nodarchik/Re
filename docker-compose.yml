services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: pack-calculator-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: packcalculator
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pack-calculator-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pack-calculator-backend
    environment:
      PORT: 8080
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: packcalculator
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pack-calculator-network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pack-calculator-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - pack-calculator-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  pack-calculator-network:
    driver: bridge

